kind: StatefulSet
apiVersion: apps/v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mssql
    spec:
      containers:
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2019-latest
          ports:
            - name: tcpsql
              containerPort: 1433
              protocol: TCP
          env:
            - name: ACCEPT_EULA
              value: 'Y'
            - name: MSSQL_ENABLE_HADR
              value: '1'
            - name: MSSQL_AGENT_ENABLED
              value: '1'
            - name: MSSQL_SA_PASSWORD
              value: password8
          resources: {}
          volumeMounts:
            - name: mssql
              mountPath: /var/opt/mssql
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 10001
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: mssql
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: mssql
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: mssql
  type: NodePort
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
      nodePort: 30151